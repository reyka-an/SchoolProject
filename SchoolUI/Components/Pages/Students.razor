@page "/students"
@inject HttpClient Http
@inject IDialogService DialogService
@inject ISnackbar Snackbar

<MudPaper Class="p-4">
    <MudStack Spacing="2">
        <MudStack Direction="Row" Spacing="1">
            <MudText Typo="Typo.h4">Ученики</MudText>
            <MudSpacer />
            <MudButton Variant="Variant.Filled" Color="Color.Primary" StartIcon="@Icons.Material.Filled.Add" OnClick="OpenAddDialog">Добавить</MudButton>
        </MudStack>

        <MudTextField @bind-Value="_search" Placeholder="Поиск..." Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Search" Immediate="true" Class="mb-2" />

        <MudTable Items="_students" Dense="true" Hover="true" Filter="FilterFunc">
            <HeaderContent>
                <MudTh>Полное имя</MudTh>
                <MudTh>Email</MudTh>
            </HeaderContent>
            <RowTemplate>
                <MudTd DataLabel="Полное имя">@context.FullName</MudTd>
                <MudTd DataLabel="Email">@context.Email</MudTd>
            </RowTemplate>
        </MudTable>
    </MudStack>
</MudPaper>

@code {
    private List<UserDto> _students = new();
    private string _search = string.Empty;

    protected override async Task OnInitializedAsync() => await LoadData();

    private async Task LoadData()
    {
        var users = await Http.GetFromJsonAsync<List<UserDto>>("api/users");
        _students = users?.Where(u => u.Role == "Student").ToList() ?? new();
    }

    private bool FilterFunc(UserDto user) => string.IsNullOrWhiteSpace(_search) ||
        user.FullName.Contains(_search, StringComparison.OrdinalIgnoreCase) ||
        user.Email.Contains(_search, StringComparison.OrdinalIgnoreCase);

    private void OpenAddDialog()
    {
        var parameters = new DialogParameters
        {
            ["Role"] = "Student",
            ["OnSaved"] = EventCallback.Factory.Create(this, OnAdded)
        };
        //DialogService.Show<AddUserDialog>("Новый ученик", parameters);
    }

    private async Task OnAdded()
    {
        await LoadData();
    }

    private class UserDto
    {
        public int Id { get; set; }
        public string FullName { get; set; } = string.Empty;
        public string Email { get; set; } = string.Empty;
        public string Role { get; set; } = string.Empty;
    }
}